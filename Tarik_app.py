import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import yfinance as yf
import numpy as np
import datetime
import plotly.express as px

# ======================
# Donn√©es ESG manuelles
# ======================
actifs = pd.DataFrame({
    "Nom": [
        "Schneider Electric", "Danone", "L'Or√©al", "Microsoft", "Tesla",
        "iShares ESG Aware MSCI USA ETF", "Vanguard ESG U.S. Stock ETF",
        "iShares USD Green Bond ETF", "Toyota", "TSMC",
        "Sony Group Corporation", "Tata Consultancy Services Limited"
    ],
    "ISIN": [
        "SU.PA", "BN.PA", "OR.PA", "MSFT", "TSLA", "ESGU", "ESGV", "BGRN", "TM", "TSM",
        "6758.T", "TCS.NS"
    ],
    "Type": [
        "Action", "Action", "Action", "Action", "Action", "ETF", "ETF", "ETF", "Action", "Action",
        "Action", "Action"
    ],
    "Secteur": [
        "Gestion de l'√©nergie", "Agroalimentaire", "Cosm√©tique", "Technologie", "Automobile",
        "Large-mid caps", "All caps", "Obligations vertes", "Automobile", "Technologie",
        "Technologie", "Technologie"
    ],
    "R√©gion": [
        "Europe", "Europe", "Europe", "Am√©rique", "Am√©rique",
        "Am√©rique", "Am√©rique", "Am√©rique", "Asie", "Asie",
        "Asie", "Asie"
    ],
    "ESG RISK RATING - Morningstar": [
        10.4, 18.01, 19.58, 17.34, 24.76, 19.73, 19.48, 18.96, 27.95, 15.19,
        17.0, 11.4
    ],
    "Certifications": [
        "ISO 14001, ISO 50001, ISO 45001, ISO 26000",
        "ISO 14001, ISO 50001, ISO 45001, ISO 26000, B Corp, Entreprise √† mission",
        "ISO 14001, ISO 50001, ISO 45001, ISO 26000, CDP",
        "ISO 14001",
        "ISO 14001, ISO 50001, ISO 45001, ISO 26000",
        "Aucune", "Aucune", "Aucune",
        "ISO 14001",
        "ISO 14001, ISO 50001, ISO 14064",
        "ISO 14001, ISO 50001",
        "ISO 14001, ISO 26000"
    ],
    "ODD": [
        "7, 9, 11, 12, 13, 17", "2, 3, 6, 12, 13, 17", "3, 5, 6, 12, 13, 17",
        "7, 9, 13, 17", "7, 9, 13, 17", "7, 9, 12, 13",
        "7, 9, 12, 13", "7, 9, 12, 13", "7, 9, 12, 13", "7, 9, 12, 13, 17",
        "9, 12, 13", "8, 9, 13"
    ],
    "MSCI IMPLIED TEMPERATURE RISE": [
        1.7, 2.4, 1.3, 1.4, 1.5, 2.7, "N.A", 2.7, 2.0, 2.5,
        1.6, 1.7
    ],
    "Crit√®res environnementaux": [
        ["r√©duction des √©missions de CO‚ÇÇ", "√©nergies renouvelables", "rapports ESG fr√©quents"],
        ["neutralit√© carbone", "gestion de l‚Äôeau", "gestion des d√©chets", "rapports ESG fr√©quents"],
        ["r√©duction des √©missions de CO‚ÇÇ", "gestion de l‚Äôeau", "gestion des d√©chets", "rapports ESG fr√©quents"],
        ["neutralit√© carbone", "gestion de l‚Äôeau", "gestion des d√©chets", "r√©duction du gaspillage", "rapports ESG fr√©quents"],
        ["neutralit√© carbone", "transition √©cologique", "rapports ESG fr√©quents"],
        ["entreprises ESG s√©lectionn√©es", "rapports ESG fr√©quents"],
        ["faible exposition aux combustibles fossiles", "rapports ESG fr√©quents"],
        ["financement de projets √©cologiques", "rapports ESG fr√©quents"],
        ["r√©duction des √©missions de CO‚ÇÇ", "gestion de l‚Äôeau", "biodiversit√©", "rapports ESG fr√©quents"],
        ["√©nergies renouvelables", "gestion de l‚Äôeau", "r√©duction des √©missions de CO‚ÇÇ"],
        ["r√©duction des √©missions de CO‚ÇÇ", "efficacit√© √©nerg√©tique", "gestion des d√©chets √©lectroniques"],
        ["neutralit√© carbone", "d√©veloppement durable", "gestion de l‚Äô√©nergie"]
    ],

    "Crit√®res sociaux": [
        ["diversit√© et inclusion", "conditions de travail", "√©ducation et formation"],
        ["conditions de travail", "acc√®s √† la nutrition", "engagement communautaire"],
        ["diversit√© et inclusion", "responsabilit√© produit", "bien-√™tre des employ√©s"],
        ["diversit√© et inclusion", "protection des donn√©es"],
        ["diversit√© et inclusion", "conditions de travail"],
        ["diversit√© et inclusion"],
        ["√©galit√© des genres"],
        ["financement de projets √† impact social positif"],
        ["diversit√© et inclusion", "conditions de travail", "engagement communautaire"],
        ["diversit√© et inclusion", "bien-√™tre des employ√©s", "engagement communautaire"],
        ["diversit√© et inclusion", "conditions de travail", "engagement communautaire"],
        ["√©ducation et formation", "inclusion num√©rique", "responsabilit√© soci√©tale"]
    ],
})


# ======================
# Configuration de la page
# ======================
st.set_page_config(page_title="Portefeuille Durable", layout="wide")
st.title("üå± Portefeuille de Finance Durable")
st.markdown("Ce portefeuille est construit √† partir de crit√®res extra-financiers (ESG, ODD, labels, ISO 14001, etc.).")

# ======================
# Filtres utilisateur
# ======================
st.sidebar.header("üîç Filtres")

# Renommage pour simplifier le code
actifs = actifs.rename(columns={"ESG RISK RATING - Morningstar": "Score ESG"})

Types = st.sidebar.multiselect("Type d‚Äôactif", options=actifs["Type"].unique(), default=actifs["Type"].unique())
Secteur = st.sidebar.multiselect("Secteur", options=actifs["Secteur"].unique(), default=actifs["Secteur"].unique())
Region = st.sidebar.multiselect("R√©gion", options=actifs["R√©gion"].unique(), default=actifs["R√©gion"].unique())

# Flatten certifications
certifications_uniques = sorted({c.strip() for sublist in actifs["Certifications"].str.split(",") for c in sublist})
Certifications = st.sidebar.multiselect("Certifications", options=certifications_uniques, default=[])

# ODD
odds_uniques = sorted({o.strip() for sublist in actifs["ODD"].str.split(",") for o in sublist})
odds = st.sidebar.multiselect("ODD (Objectifs de D√©veloppement Durable)", options=odds_uniques, default=[])

# Crit√®res environnementaux et sociaux (plac√©s ici AVANT le score ESG)
env_criteres_uniques = sorted({crit for sous_liste in actifs["Crit√®res environnementaux"] for crit in sous_liste})
soc_criteres_uniques = sorted({crit for sous_liste in actifs["Crit√®res sociaux"] for crit in sous_liste})

EnvCriteres = st.sidebar.multiselect("Crit√®res environnementaux", options=env_criteres_uniques, default=[])
SocCriteres = st.sidebar.multiselect("Crit√®res sociaux", options=soc_criteres_uniques, default=[])

# Score ESG
score_min = st.sidebar.slider("Score ESG maximum des actifs", min_value=0.0, max_value=50.0, value=25.0, step=0.1)

# ======================
# Filtrage des actifs
# ======================
actifs_filtres = actifs[(
    actifs["Type"].isin(Types)) &
    (actifs["Secteur"].isin(Secteur)) &
    (actifs["R√©gion"].isin(Region)) &
    (actifs["Score ESG"] <= score_min)
]

# Filtrage ODD
if odds:
    actifs_filtres = actifs_filtres[actifs_filtres["ODD"].apply(lambda x: any(o in x.split(",") for o in odds))]

# Filtrage certifications
if Certifications:
    actifs_filtres = actifs_filtres[actifs_filtres["Certifications"].apply(lambda x: any(c.strip() in x for c in Certifications))]

# Filtrage environnemental
if EnvCriteres:
    actifs_filtres = actifs_filtres[
        actifs_filtres["Crit√®res environnementaux"].apply(lambda liste: any(crit in liste for crit in EnvCriteres))
    ]

# Filtrage social
if SocCriteres:
    actifs_filtres = actifs_filtres[
        actifs_filtres["Crit√®res sociaux"].apply(lambda liste: any(crit in liste for crit in SocCriteres))
    ]

# Calcul des poids invers√©s
if not actifs_filtres.empty:
    actifs_filtres["Poids Invers√©s"] = 1 / actifs_filtres["Score ESG"]
    total_poids = actifs_filtres["Poids Invers√©s"].sum()
    actifs_filtres["Poids"] = actifs_filtres["Poids Invers√©s"] / total_poids


# ======================
# Tableau des actifs s√©lectionn√©s
# ======================
st.header("Actifs du portefeuille filtr√©")
st.dataframe(actifs_filtres.reset_index(drop=True), use_container_width=True)

# ======================
# Notre choix : cr√©ation d‚Äôun portefeuille personnalis√©
# ======================
st.header("Notre approche : un portefeuille construit sur mesure")
st.markdown("""
Dans le cadre de ce projet, nous avons fait le choix de **ne pas s√©lectionner un fonds existant**, mais de construire **notre propre portefeuille durable** √† partir d‚Äôune s√©lection d‚Äôactifs cot√©s et d‚ÄôETF labellis√©s.

Notre d√©marche repose sur une volont√© de :
- **contr√¥ler les crit√®res ESG choisis** et les pond√©rations appliqu√©es,
- **analyser activement l‚Äôalignement avec les ODD** (Objectifs de D√©veloppement Durable),
- et surtout de **tester une m√©thodologie personnelle** inspir√©e des meilleures pratiques en finance durable.

Nous avons donc d√©fini nos propres crit√®res de filtrage : type d‚Äôactif, score ESG, certifications ISO, ODD, etc., et nous avons pond√©r√© les actifs s√©lectionn√©s en fonction de leur performance extra-financi√®re.
""")

# ======================
# üìò 1. Explication de la strat√©gie ESG
# ======================
st.header("Strat√©gie ESG du portefeuille")
st.markdown("""
Ce portefeuille est construit selon une approche **best-in-class**, qui consiste √† s√©lectionner les entreprises ayant les meilleurs scores ESG dans leur secteur.

La strat√©gie repose sur :
- l'exclusion d'actifs au-del√† d‚Äôun seuil ESG donn√© (score > 25 √©limin√©s)
- une pond√©ration **inversement proportionnelle au risque ESG** (plus l‚Äôentreprise est vertueuse, plus elle est pond√©r√©e)
- une s√©lection diversifi√©e de secteurs, zones g√©ographiques et types d‚Äôactifs

Les donn√©es ESG sont issues de la notation **Morningstar**, combin√©e √† des certifications et alignements avec les **Objectifs de D√©veloppement Durable (ODD)**.
""")

# ======================
# üåø 2. Analyse de l'impact ESG
# ======================
st.header("1. Analyse d'impact ESG")
if not actifs_filtres.empty:
    score_moyen = round(actifs_filtres["Score ESG"].mean(), 2)
    st.markdown(f"**Score ESG moyen du portefeuille :** `{score_moyen}`")

    st.markdown("""
    üîç **Interpr√©tation :** Un score ESG plus faible signifie un meilleur comportement extra-financier.
    - < 15 : tr√®s faible risque ESG 
    - 15 √† 20 : risque mod√©r√© 
    - \\> 20 : √† surveiller 

    De plus, les entreprises sont analys√©es en fonction de leurs contributions aux **ODD** :
    """)
    odd_series = actifs_filtres["ODD"].str.split(", ").explode().value_counts()
    st.bar_chart(odd_series)
else:
    st.info("Aucun actif s√©lectionn√© pour analyser l'impact ESG.")


# ======================
# üè∑Ô∏è 3. Labels et certifications
# ======================
st.header("2. Labels et certifications durables")
st.markdown("""
Certains actifs du portefeuille disposent de **labels ou certifications reconnus**, renfor√ßant leur cr√©dibilit√© :

- **ISO 14001, 50001, 26000** : gestion environnementale, performance √©nerg√©tique, responsabilit√© soci√©tale.
- **B Corp**, **Entreprise √† mission**, **CDP** : crit√®res extra-financiers v√©rifi√©s par des entit√©s ind√©pendantes.
- **Label ISR (France)** : notre portefeuille suit des principes similaires :
    - exclusion des actifs avec un score ESG trop √©lev√©,
    - int√©gration ESG syst√©matique dans la s√©lection,
    - diversification sectorielle et g√©ographique.
- **Label Greenfin (France)** : via l‚Äôexposition aux **obligations vertes (Green Bonds)**, le portefeuille contribue au **financement de projets √©cologiques**.

Ces √©l√©ments montrent une **volont√© de conformit√© aux meilleures pratiques** de la finance durable fran√ßaise et europ√©enne.
""")

# ======================
# üìä 4. Suivi combin√© des performances financi√®res et ESG
# ======================
st.header("3. Tableau de bord ESG & financier")
if not actifs_filtres.empty:
    comparaison = actifs_filtres[["Nom", "Score ESG", "Poids"]].copy()
    comparaison = comparaison.sort_values(by="Poids", ascending=False)
    st.dataframe(comparaison.style.format({"Score ESG": "{:.2f}", "Poids": "{:.2%}"}), use_container_width=True)
    st.markdown("""
    Ce tableau permet de croiser la performance ESG des entreprises avec leur importance dans le portefeuille.
    Il constitue un outil de **pilotage int√©gr√©** : durable et financier.
    """)
else:
    st.info("Aucun actif s√©lectionn√© pour afficher le tableau ESG/Finance.")

# ======================
# üìà 5. Visualisation crois√©e : Poids vs Score ESG
# ======================
st.header("4. Visualisation crois√©e : Poids vs Score ESG")

if not actifs_filtres.empty:
    fig, ax = plt.subplots(figsize=(6, 4))
    scatter = ax.scatter(
        actifs_filtres["Score ESG"],
        actifs_filtres["Poids"],
        c=actifs_filtres["Poids"],
        cmap="viridis",
        s=100,
        edgecolors='black'
    )
    for i, row in actifs_filtres.iterrows():
        ax.annotate(row["Nom"], (row["Score ESG"], row["Poids"]), fontsize=8, alpha=0.7)

    ax.set_xlabel("Score ESG (plus faible = meilleur)")
    ax.set_ylabel("Poids dans le portefeuille")
    ax.set_title("Corr√©lation entre la qualit√© ESG et la pond√©ration")
    ax.grid(True)
    st.pyplot(fig)

    st.markdown("""
    Ce graphique permet de **visualiser l'approche Best-in-Class** :  
    Les entreprises avec un **meilleur score ESG (plus bas)** sont **plus fortement pond√©r√©es**,  
    ce qui maximise l‚Äôimpact positif du portefeuille.
    """)
else:
    st.info("Aucun actif s√©lectionn√© pour afficher la corr√©lation Score ESG / Poids.")


# ======================
# Fin du rapport enrichi
# ======================


# ======================
# Visualisation ESG
# ======================
st.header("5. Visualisation ESG")

def draw_pie_chart(data, title, cmap):
    fig, ax = plt.subplots(figsize=(3, 3))
    couleurs = cmap(np.linspace(0, 1, len(data)))
    wedges, texts, autotexts = ax.pie(
        data,
        labels=None,  # Supprimer les labels du camembert
        autopct="%1.1f%%",
        startangle=90,
        colors=couleurs,
        textprops={'fontsize': 7}
    )
    ax.axis("equal")
    ax.set_title(title, fontsize=10)

    # Ajouter l√©gende √† c√¥t√© pour ne pas tasser le camembert
    ax.legend(
        data.index,
        loc="center left",
        bbox_to_anchor=(1, 0.5),
        fontsize=6,
        frameon=False
    )
    return fig

col1, col2, col3 = st.columns(3)

with col1:
    secteur_data = actifs_filtres.groupby("Secteur")["Poids"].sum().sort_values(ascending=False)
    fig1 = draw_pie_chart(secteur_data, "Secteurs", plt.cm.Paired)
    st.pyplot(fig1)

with col2:
    region_data = actifs_filtres.groupby("R√©gion")["Poids"].sum().sort_values(ascending=False)
    fig2 = draw_pie_chart(region_data, "R√©gions", plt.cm.Set3)
    st.pyplot(fig2)

with col3:
    type_data = actifs_filtres.groupby("Type")["Poids"].sum().sort_values(ascending=False)
    fig3 = draw_pie_chart(type_data, "Types d‚Äôactifs", plt.cm.Accent)
    st.pyplot(fig3)

st.markdown("""
---

### **Analyse d√©taill√©e de la composition ESG**

#### **R√©partition sectorielle**
Le portefeuille est largement expos√© au **secteur technologique** (‚âà 40‚ÄØ%), ce qui refl√®te le r√¥le cl√© des technologies dans la transition verte (efficacit√© √©nerg√©tique, digitalisation responsable, neutralit√© carbone).  
La pr√©sence d‚Äôautres secteurs tels que l‚Äô**automobile**, l‚Äô**agroalimentaire** et les **√©nergies** (via la gestion de l‚Äô√©nergie et obligations vertes) assure une **diversification raisonnable**.

#### **R√©partition g√©ographique**
Le portefeuille est bien r√©parti entre **Am√©rique (38‚ÄØ%)**, **Asie (32‚ÄØ%)** et **Europe (30‚ÄØ%)**, ce qui refl√®te une **diversification r√©gionale √©quilibr√©e**.  
L'ajout r√©cent d‚Äôactifs asiatiques √† faible temp√©rature implicite (Sony, Infosys) a permis de **renforcer la couverture Asie** tout en **r√©duisant l‚Äôempreinte climatique globale** du portefeuille.

#### **R√©partition par type d‚Äôactif**
La majorit√© des investissements sont concentr√©s sur des **actions individuelles (‚âà 77‚ÄØ%)**, permettant un **contr√¥le fin des crit√®res ESG** par actif.  
Les **ETF (‚âà 23‚ÄØ%)** compl√®tent la structure avec une approche plus large et diversifi√©e, tout en int√©grant des filtres ESG dans leur construction.

---

Ces r√©partitions montrent que le portefeuille respecte les **principes de diversification** tout en **optimisant l‚Äôimpact ESG** selon une approche best-in-class.
""")


# ======================
# üî• Temp√©rature implicite (r√©elle MSCI si dispo, sinon estimation)
# ======================
st.subheader("6. Temp√©rature implicite du portefeuille (source MSCI ou estimation)")

def complete_temperature(row):
    try:
        temp = float(row["MSCI IMPLIED TEMPERATURE RISE"])
        return temp
    except:
        score = row["Score ESG"]
        if score < 15:
            return 1.5
        elif score < 20:
            return 2.0
        elif score < 25:
            return 2.5
        else:
            return 3.0

if not actifs_filtres.empty:
    actifs_filtres["Temp√©rature estim√©e"] = actifs_filtres.apply(complete_temperature, axis=1)
    temp_implicite = np.average(actifs_filtres["Temp√©rature estim√©e"], weights=actifs_filtres["Poids"])
    st.metric(label="üåç Temp√©rature implicite du portefeuille", value=f"{temp_implicite:.2f}¬∞C")
    st.markdown(f"""
    Cette temp√©rature est calcul√©e √† partir de :
    - La **donn√©e MSCI** lorsqu'elle est disponible (colonne *MSCI IMPLIED TEMPERATURE RISE*),
    - Sinon, une **estimation p√©dagogique bas√©e sur le score ESG** est utilis√©e.

    üëâ **Temp√©rature moyenne pond√©r√©e du portefeuille :** `{temp_implicite:.2f}¬∞C`

    - Objectif de l'Accord de Paris : < **2¬∞C**
    - Temp√©rature < 2¬∞C = portefeuille align√©
    """)
else:
    st.info("Aucun actif s√©lectionn√© pour estimer la temp√©rature implicite.")


# ======================
# Performances financi√®res
# ======================
st.header("7. Performances du portefeuille")

end_date = datetime.datetime.today()
start_date = end_date - datetime.timedelta(days=3*365)

tickers = actifs_filtres["ISIN"].tolist()

if not tickers:
    st.warning("Aucun actif s√©lectionn√©. Veuillez ajuster vos filtres.")
else:
    data = yf.download(tickers, start=start_date, end=end_date)["Close"].bfill()

    if data.empty:
        st.error("Les donn√©es financi√®res n'ont pas pu √™tre r√©cup√©r√©es.")
    else:
        data.dropna(axis=1, how='any', inplace=True)

        if data.empty:
            st.error("Pas assez de donn√©es valides apr√®s nettoyage.")
        else:
            performance_par_actif = (data.iloc[-1] / data.iloc[0]) - 1
            performance_portefeuille = performance_par_actif.mean()
            st.metric(label="Performance sur 3 ans", value=f"{performance_portefeuille:.2%}")

            data_normalized = data 

            # Utilisation des poids des actifs filtr√©s
            poids_dict = actifs_filtres.set_index("ISIN")["Poids"].to_dict()
            data_weighted = data_normalized.multiply([poids_dict.get(t, 0) for t in data.columns], axis=1)

            valeur_actuelle = data_weighted.sum(axis=1).iloc[-1]
            st.metric(label="Valeure actuelle du portefeuille", value=f"{round(valeur_actuelle,2)}")

            # √âvolution du portefeuille dans le temps
            st.write("### √âvolution de la valeur du portefeuille depuis 3 ans")

            valeur_portefeuille = data_weighted.sum(axis=1)

            st.line_chart(valeur_portefeuille)

            # D√©tail par actif
            st.write("### D√©tail par actif depuis 3 ans")
            st.dataframe(performance_par_actif.sort_values(ascending=False).map(lambda x: f"{x:.2%}"))


# ======================
# üå°Ô∏è Climate VaR : Sc√©nario de stress climatique
# ======================
st.header("8. Climate VaR : Sc√©nario de stress climatique")
st.markdown("""
La **Climate VaR (Value at Risk climatique)** est une estimation des pertes potentielles que subirait un portefeuille en cas de **choc climatique majeur**.

Nous avons simul√© un **sc√©nario de stress √† court terme** :
- **-10%** de perte sur les actifs expos√©s aux risques physiques et de transition (technologie, automobile, √©nergie),
- **-5%** sur les autres secteurs.

Ce sc√©nario est **inspir√© de la logique de risque de transition** d√©crite dans les cadres comme le **SFDR**, ou les mod√®les de **stress test climatique** √©voqu√©s dans les rapports MSCI ou de la BCE.
""")

# D√©finir les secteurs sensibles au stress climatique
secteurs_sensibles = ["Technologie", "Automobile", "√ânergie"]
stress_details = []

for i, row in actifs_filtres.iterrows():
    secteur = row["Secteur"]
    poids = row["Poids"]
    if secteur in secteurs_sensibles:
        perte_pct = -0.10
    else:
        perte_pct = -0.05
    perte_pond√©r√©e = perte_pct * poids
    stress_details.append({
        "Nom": row["Nom"],
        "Secteur": secteur,
        "Poids": poids,
        "Perte % secteur": f"{perte_pct:.0%}",
        "Impact portefeuille": perte_pond√©r√©e
    })

df_stress = pd.DataFrame(stress_details)
perte_totale = df_stress["Impact portefeuille"].sum()

import plotly.express as px
st.metric(label="Perte totale estim√©e en cas de choc climatique", value=f"{perte_totale:.2%}")

st.markdown("""
Ce tableau montre l‚Äôimpact simul√© de ce stress sur chaque actif du portefeuille :
""")
st.dataframe(df_stress[["Nom", "Secteur", "Poids", "Perte % secteur", "Impact portefeuille"]].sort_values(by="Impact portefeuille", ascending=True), use_container_width=True)

fig = px.bar(df_stress.sort_values(by="Impact portefeuille"),
             x="Nom", y="Impact portefeuille", color="Secteur",
             title="Impact du stress climatique par actif",
             labels={"Impact portefeuille": "Perte simul√©e"}, height=400)
st.plotly_chart(fig, use_container_width=True)

st.markdown("""
**Interpr√©tation** :
- Cette estimation simplifi√©e montre comment les **secteurs sensibles aux r√©gulations climatiques** pourraient amplifier les pertes.
- Elle donne un aper√ßu utile de la **vuln√©rabilit√© climatique du portefeuille**, bien qu‚Äôelle ne remplace pas un mod√®le climatique complet (type Climate Value-at-Risk MSCI ou sc√©narios Net-Zero).

Ce type de simulation peut √™tre adapt√© √† des **sc√©narios physiques (ouragan, s√©cheresse)** ou **de politique climatique (taxe carbone, r√©glementation stricte)**.
""")


